From 51d177a29b03c0f3b8c3f4d929c6ee7764a464f8 Mon Sep 17 00:00:00 2001
From: Mauro Carvalho Chehab <mchehab@redhat.com>
Date: Mon, 4 Oct 2010 14:39:33 -0300
Subject: [PATCH] edac-ctl: add --delay, --status and improve --motherboard identify

This patch syncs edac-ctl with upstream version 0.16.
Also, some dead code is removed (driverdb code, used for --load/
--unload commands, that were already removed from RHEL).

Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>
---
 src/etc/Makefile.am |    3 +-
 src/etc/Makefile.in |    3 +-
 src/etc/driver.db   |   20 ------
 src/util/edac-ctl   |  162 ++++++++++++++++++++++++---------------------------
 4 files changed, 79 insertions(+), 109 deletions(-)
 delete mode 100644 src/etc/driver.db

Index: tmp_edac-utils/src/etc/Makefile.am
===================================================================
--- tmp_edac-utils.orig/src/etc/Makefile.am
+++ tmp_edac-utils/src/etc/Makefile.am
@@ -6,7 +6,6 @@
 
 EXTRA_DIST = \
 	labels.db \
-	driver.db \
 	edac.init
 
 install-data-local:
@@ -14,5 +13,5 @@ install-data-local:
 	$(INSTALL) -m 755 $(srcdir)/edac.init \
 	    "$(DESTDIR)$(sysconfdir)/rc.d/init.d/edac"; \
 	$(INSTALL) -m 755 -d "$(DESTDIR)$(sysconfdir)/edac/"; \
-	$(INSTALL) -m 644 $(srcdir)/driver.db $(srcdir)/labels.db \
+	$(INSTALL) -m 644 $(srcdir)/labels.db \
 	    "$(DESTDIR)$(sysconfdir)/edac/"; 
Index: tmp_edac-utils/src/etc/Makefile.in
===================================================================
--- tmp_edac-utils.orig/src/etc/Makefile.in
+++ tmp_edac-utils/src/etc/Makefile.in
@@ -160,7 +160,6 @@ sysconfdir = @sysconfdir@
 target_alias = @target_alias@
 EXTRA_DIST = \
 	labels.db \
-	driver.db \
 	edac.init
 
 all: all-am
@@ -329,7 +328,7 @@ install-data-local:
 	$(INSTALL) -m 755 $(srcdir)/edac.init \
 	    "$(DESTDIR)$(sysconfdir)/rc.d/init.d/edac"; \
 	$(INSTALL) -m 755 -d "$(DESTDIR)$(sysconfdir)/edac/"; \
-	$(INSTALL) -m 644 $(srcdir)/driver.db $(srcdir)/labels.db \
+	$(INSTALL) -m 644 $(srcdir)/labels.db \
 	    "$(DESTDIR)$(sysconfdir)/edac/"; 
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
 # Otherwise a system limit (for SysV at least) may be exceeded.
Index: tmp_edac-utils/src/etc/driver.db
===================================================================
--- tmp_edac-utils.orig/src/etc/driver.db
+++ /dev/null
@@ -1,20 +0,0 @@
-# PCI IDs for bluesmoke drivers
-#
-#  Format is 
-#   Driver xxxx:
-#      VENDOR_ID:PCI_ID,PCI_ID,PCI_ID,...
-#      VENDOR_ID:PCI_ID,...
-
-Driver e7xxx:
- 0x8086:0x255d 0x2540 0x254c 0x2550
-
-Driver e752x:
- 0x8086:0x3590 0x359e
- 
-Driver i82860:
- 0x8086:0x2531
-
-Driver k8:
- 0x1022:0x1100
-   
-   
Index: tmp_edac-utils/src/util/edac-ctl
===================================================================
--- tmp_edac-utils.orig/src/util/edac-ctl
+++ tmp_edac-utils/src/util/edac-ctl
@@ -36,26 +36,22 @@ my %conf        = ();
 my %bus         = ();
 my $prog        = basename $0;
 $conf{labeldb}  = "/etc/edac/labels.db";
-$conf{driverdb} = "/etc/edac/driver.db";
 
 
 my $status      = 0;
 
 my $usage       = <<EOF;
 Usage: $prog [OPTIONS...]
- --driver           Print name of valid EDAC driver for this HW.
+ --quiet            Quiet operation.
  --mainboard        Print mainboard vendor and model for this hardware.
- --load             Load EDAC drivers.
- --unload           Unload EDAC drivers.
  --status           Print status of EDAC drivers.
  --print-labels     Print Motherboard DIMM labels to stdout.
  --register-labels  Load Motherboard DIMM labels into EDAC driver.
+ --delay=N          Delay N seconds before writing DIMM labels.
  --labeldb=DB       Load label database from file DB.
- --driverdb=DB      Load driver database from file DB.
  --help             This help message.
 EOF
 
-
 parse_cmdline();
 
 if (  $conf{opt}{mainboard} || $conf{opt}{print_labels} 
@@ -78,18 +74,21 @@ if (  $conf{opt}{mainboard} || $conf{opt
 
 }
 
+if ($conf{opt}{status}) {
+    $status = print_status ();
+    exit ($status ? 0 : 1);
+}
+
 exit (0);
 
 sub parse_cmdline
 {
-    $conf{opt}{driver} = 0;
     $conf{opt}{mainboard} = '';
     $conf{opt}{print_labels} = 0;
     $conf{opt}{register_labels} = 0;
-    $conf{opt}{load} = 0;
-    $conf{opt}{unload} = 0;
     $conf{opt}{status} = 0;
     $conf{opt}{quiet} = 0;
+    $conf{opt}{delay} = 0;
 
     my $rref = \$conf{opt}{report};
     my $mref = \$conf{opt}{mainboard};
@@ -100,22 +99,18 @@ sub parse_cmdline
                          "quiet" =>           \$conf{opt}{quiet},
                          "print-labels" =>    \$conf{opt}{print_labels},
                          "register-labels" => \$conf{opt}{register_labels},
+                         "delay:s" =>         \$conf{opt}{delay},
                          "labeldb=s" =>       \$conf{labeldb},
-                         "driverdb=s" =>      \$conf{driverdb},
-                         "driver" =>          \$conf{opt}{driver},
-                         "load" =>            \$conf{opt}{load},
-                         "unload" =>          \$conf{opt}{unload},
                          "status" =>          \$conf{opt}{status});
         
     usage(1) if !$rc;
 
     usage (0) if !grep $conf{opt}{$_}, keys %{$conf{opt}}; 
 
-    if ($conf{opt}{status} + $conf{opt}{load} + $conf{opt}{unload} > 1) {
-        print STDERR "Specify only one of --status --load or --unload\n";
-        usage (1);
+    if ($conf{opt}{delay} && !$conf{opt}{register_labels}) {
+        log_error ("Only use --delay with --register-labels\n");
+        exit (1);
     }
-
 }
 
 sub usage
@@ -140,7 +135,7 @@ sub print_status
          or die "Unable to open /proc/modules: $!\n";
 
     while (<MODULES>) {
-       $status = 1 if /$conf{driver}_edac/;
+       $status = 1 if /_edac/;
     }
 
     print "$prog: drivers ", ($status ? "are" : "not"), " loaded.\n"
@@ -150,54 +145,6 @@ sub print_status
 }
 
 
-sub parse_driver_db
-{
-    my $driver = "";
-    open CONF, "< $conf{driverdb}"
-         or die "Unable to open driver DB: \"$conf{driverdb}\": $!";
-    while (<CONF>) {
-        chomp;
-        s/#.*$//;
-        s/^\s+//;
-        s/\s+$//;
-        next unless length;
-
-        if (/^Driver\s+(\S+)\s*:/i) {
-            $driver = $1;
-            next;
-        }
-        next unless $driver;
-
-        if (my ($vendor, $ids) = /^\s*(\w+)\s*:\s*(.*)/) {
-            $vendor =~ s/^0x//;
-            $ids    =~ s/0x//g;
-            map { $conf{driver}{"$vendor:$_"} = $driver}
-               split(/[, ]+/, $ids)
-        }
-    }
-}
-
-sub find_edac_driver
-{
-    my $cmd = "/sbin/lspci -n";
-    my $driver = "";
-
-    parse_driver_db();
-
-    open (LSPCI, "$cmd |") or die "$prog: Unable to run $cmd: $!\n";
-
-    while (<LSPCI>) {
-        next unless /^[\d:\.]+ Class \w+: ([0-9a-f]+:[0-9a-f]+)/i;
-        (my $key = $1) =~ s/0x//g;
-        last if (exists $conf{driver}{$key} && ($driver = $conf{driver}{$key}));
-    }
-    close (LSPCI) or warn "$prog: $cmd exited with $?\n";
-
-    return $driver;
-}
-
-
-
 sub get_mainboard_info {
     my ($vendor, $model);
 
@@ -213,7 +160,7 @@ sub get_mainboard_info {
     $conf{mainboard}{model}  = $model;
 }
 
-sub guess_vendor_model {
+sub guess_vendor_model_dmidecode {
     my ($vendor, $model);
     my $line = 0;
 
@@ -227,7 +174,7 @@ sub guess_vendor_model {
     while (<DMI>) {
         $line++;
 
-        /^(\s*)(system|board) information/i || next LINE;
+        /^(\s*)(board|base board) information/i || next LINE;
         my $indent = $1;
 
         while ( <DMI> ) {
@@ -235,23 +182,48 @@ sub guess_vendor_model {
             $1 lt $indent && last LINE;
             $indent = $1;
             /(?:manufacturer|vendor):\s*(.*\S)\s*/i && ( $vendor = $1 );
-	        /product(?: name)?:\s*(.*\S)\s*/i       && ( $model  = $1 );
+            /product(?: name)?:\s*(.*\S)\s*/i       && ( $model  = $1 );
             last LINE if ($vendor && $model);
-	    }
-	}
+        }
+    }
 
     close (DMI);
     return ($vendor, $model);
 }
 
+sub guess_vendor_model_sysfs {
+    #
+    #  Try to look up DMI information in sysfs
+    #
+    open (VENDOR, "/sys/class/dmi/id/board_vendor") or return undef;
+    open (MODEL,  "/sys/class/dmi/id/board_name")   or return undef;
 
-sub parse_dimm_labels
+    my ($vendor, $model) = (<VENDOR>, <MODEL>);
+
+    close (VENDOR);
+    close (MODEL);
+
+    return undef unless ($vendor && $model);
+
+    chomp ($vendor, $model);
+
+    return ($vendor, $model);
+}
+
+sub guess_vendor_model {
+    my ($vendor, $model) = &guess_vendor_model_sysfs ();
+
+    return ($vendor, $model) if ($vendor && $model);
+
+    return (&guess_vendor_model_dmidecode ());
+}
+
+sub parse_dimm_labels_file
 {
-    my %labels = ();
+    my ($lh, $file) = (@_);
     my $line = -1;
     my $vendor = "";
     my @models = ();
-    my $file = $conf{labeldb};
 
     open (LABELS, "$file") 
         or die "Unable to open label database: $file: $!\n";
@@ -271,7 +243,7 @@ sub parse_dimm_labels
         }
         if (/(model|board)\s*:\s*(.*)$/i) {
             !$vendor && die "$file: line $line: MB model without vendor\n";
-            @models = split(/,[\ ]*/, lc $2);
+            @models = grep { s/\s*(.*)\s*$/$1/ } split(/[,;]+/, lc $2);
             next;
         }
 
@@ -283,14 +255,14 @@ sub parse_dimm_labels
             next unless (my ($label, $info) = ($str =~ /^(.*)\s*:\s*(.*)$/i));
 
             unless ($info =~ /(\d\.\d\.\d,*)+/) {
-                print STDERR "$file: $line: Invalid syntax, ignoring: \"$_\"\n";
+                log_error ("$file: $line: Invalid syntax, ignoring: \"$_\"\n");
                 next;
             }
 
             for my $target (split (/[, ]+/, $info)) {
                 my ($mc, $row, $chan) = ($target =~ /(\d+)\.(\d+)\.(\d+)/);
 
-                map { $labels{$vendor}{lc $_}{$mc}{$row}{$chan} = $label } 
+                map { $lh->{$vendor}{lc $_}{$mc}{$row}{$chan} = $label } 
                          @models;
 
             }
@@ -299,7 +271,23 @@ sub parse_dimm_labels
 
     close (LABELS) or die "Error from label db \"$file\" : $!\n";
 
-    return \%labels
+    return $lh;
+}
+
+sub parse_dimm_labels
+{
+    my %labels = ();
+
+    #
+    #  Accrue all DIMM labels from the labels.db file, as
+    #   well as any files under the labels dir
+    # 
+    for my $file ($conf{labeldb}) {
+    	next unless -r $file;
+    	parse_dimm_labels_file (\%labels, $file);
+    }
+
+    return \%labels;
 }
 
 sub read_dimm_label
@@ -316,7 +304,7 @@ sub read_dimm_label
         return ("Error");
     }
 
-    chomp (my $label = <LABEL>);
+    chomp (my $label = <LABEL> || "");
 
     close (LABEL);
 
@@ -332,8 +320,8 @@ sub print_dimm_labels
     my $format = "%-35s %-20s %-20s\n";
 
     if (!exists $$lref{$vendor}{$model}) {
-        print STDERR "No dimm labels for $conf{mainboard}{vendor} " .
-                     "$conf{mainboard}{model} \n";
+        log_error ("No dimm labels for $conf{mainboard}{vendor} " .
+                   "$conf{mainboard}{model}\n");
         return;
     }
 
@@ -364,11 +352,13 @@ sub register_dimm_labels
     my $sysfs  = "/sys/devices/system/edac/mc";
 
     if (!exists $$lref{$vendor}{$model}) {
-        print STDERR "No dimm labels for $conf{mainboard}{vendor} " .
-                                        "$conf{mainboard}{model} \n";
-        return;
+        log_error ("No dimm labels for $conf{mainboard}{vendor} " .
+                                      "$conf{mainboard}{model}\n");
+        return 0;
     }
 
+    select (undef, undef, undef, $conf{opt}{delay});
+
     for my $mc (sort keys %{$$lref{$vendor}{$model}}) {
         for my $row (sort keys %{$$lref{$vendor}{$model}{$mc}}) {
             for my $chan (sort keys %{$$lref{$vendor}{$model}{$mc}{$row}}) {
@@ -391,8 +381,10 @@ sub register_dimm_labels
             }
         }
     }
+    return 1;
 }
 
-
+sub log_msg   { print STDERR "$prog: ", @_ unless $conf{opt}{quiet}; }
+sub log_error { log_msg ("Error: @_"); }
 
 # vi: ts=4 sw=4 expandtab
